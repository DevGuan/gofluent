{"name":"Gofluent","tagline":"Something acting like fluentd rewritten in Go.","body":"gofluent\r\n========\r\n\r\nThis program is something acting like fluentd rewritten in Go.\r\n\r\nTable of Contents\r\n=================\r\n\r\n* [Introduction](#introduction)\r\n* [Architecture](#architecture)\r\n* [Implementation](#implementation)\r\n\t* [Overview](#overview)\r\n\t* [Data flow](#data-flow)\r\n* [Plugins](#plugins)\r\n\t* [Tail Input Plugin](#tail-input-plugin)\r\n\t* [Httpsqs Output Plugin](#httpsqs-output-plugin)\r\n\t* [Stdout Output Plugin](#stdout-output-plugin)\r\n\t* [Mongodb Output Plugin](#mongodb-output-plugin)\r\n\r\nIntroduction\r\n============\r\n\r\nFluentd is originally written in CRuby, which has too many dependecies.\r\n\r\nI hope fluentd to be simpler and cleaner, as its main feature is simplicity and rubostness.\r\n\r\nArchitecture\r\n============\r\n\r\n```\r\n    +---------+     +---------+     +---------+     +---------+\r\n    | server1 |     | server2 |     | server3 |     | serverN |\r\n    |---------|     |---------|     |---------|     |---------|\r\n    |         |     |         |     |         |     |         |\r\n    |---------|     |---------|     |---------|     |---------|\r\n    |gofluent |     |gofluent |     |gofluent |     |gofluent |\r\n    +---------+     +---------+     +---------+     +---------+\r\n        |               |               |               |\r\n         -----------------------------------------------\r\n                                |\r\n                                | HTTP POST\r\n                                V\r\n                        +-----------------+\r\n                        |                 |\r\n                        |      Httpmq     |\r\n                        |                 | \r\n                        +-----------------+\r\n                                |\r\n                                | HTTP GET\r\n                                V \r\n                        +-----------------+                 +-----------------+\r\n                        |                 |                 |                 |\r\n                        |   Preprocessor  | --------------> |     Storage     |\r\n                        |                 |                 |                 | \r\n                        +-----------------+                 +-----------------+\r\n```\r\n\r\nImplementation\r\n==============\r\nOverview\r\n--------\r\n\r\n```\r\nInput -> Router -> Output\r\n```\r\nData flow\r\n---------\r\n\r\n```\r\n                        -------<-------- \r\n                        |               |\r\n                        V               | generate pool\r\n       InputRunner.inputRecycleChan     | recycling\r\n            |           |               |     ^   \r\n            |            ------->-------       \\ \r\n            |               ^           ^       \\\r\n    InputRunner.inChan      |           |        \\\r\n            |               |           |         \\\r\n            |               |           |          \\\r\n    consume |               |           |           \\\r\n            V               |           |            \\\r\n          Input(Router.inChan) ---->  Router ----> (Router.outChan)Output.inChan\r\n\r\n```\r\n\r\nPlugins\r\n=======\r\n\r\nTail Input Plugin\r\n-----------------\r\nThe in_tail input plugin allows gofluent to read events from the tail of text files. Its behavior is similar to the tail -F command.\r\n\r\nExample Configuration\r\n\r\nin_tail is included in gofluent’s core. No additional installation process is required.\r\n```\r\n<source>\r\n  type tail\r\n  path /var/log/httpd-access.log\r\n  pos_file /var/log/httpd-access.log.pos\r\n  tag apache.access\r\n  format /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^ ]*) +\\S*)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$/\r\n</source>\r\n```\r\n*type (required)*\r\nThe value must be tail.\r\n\r\n*tag (required)*\r\nThe tag of the event.\r\n\r\n*path (required)*\r\nThe paths to read.\r\n\r\n*format (required)*\r\nThe format of the log. It is the name of a template or regexp surrounded by ‘/’.\r\nThe regexp must have at least one named capture (?P\\<NAME\\>PATTERN).\r\n\r\nThe following templates are supported:\r\n- regexp\r\n- json\r\nOne JSON map, per line. This is the most straight forward format :).\r\n```\r\nformat json\r\n```\r\n*pos_file (highly recommended)*\r\nThis parameter is highly recommended. gofluent will record the position it last read into this file.\r\n```\r\npos_file /var/log/access.log.pos\r\n```\r\n\r\n*sync_interval*\r\nThe sync interval of pos file, default is 2s.\r\n\r\nHttpsqs Output Plugin\r\n---------------------\r\nThe out_httpsqs output plugin allows gofluent to send data to httpsqs mq.\r\n\r\nExample Configuration\r\n\r\nout_httpsqs is included in gofluent’s core. No additional installation process is required.\r\n```\r\n<match httpsqs.**>\r\n  type httpsqs\r\n  host localhost\r\n  port 1218\r\n  flush_interval 10\r\n</match>\r\n```\r\n*type (required)*\r\nThe value must be httpsqs.\r\n\r\n*host (required)*\r\nThe output target host ip.\r\n\r\n*port (required)*\r\nThe output target host port.\r\n\r\n*auth (highly recommended)*\r\nThe auth password for httpsqs.\r\n\r\n*flush_interval*\r\nThe flush interval for sending data to httpsqs.\r\n\r\n*gzip*\r\nThe gzip switch, default is on.\r\n\r\nForward Output Plugin\r\n---------------------\r\nThe out_forward output plugin allows gofluent to forward events to another gofluent.\r\n\r\nExample Configuration\r\n\r\nout_forward is included in gofluent’s core. No additional installation process is required.\r\n```\r\n<match forward.**>\r\n  type forward\r\n  host localhost\r\n  port 1218\r\n  flush_interval 10\r\n</match>\r\n```\r\n*type (required)*\r\nThe value must be forward.\r\n\r\n*host (required)*\r\nThe output target host ip.\r\n\r\n*port (required)*\r\nThe output target host port.\r\n\r\n*flush_interval*\r\nThe flush interval for sending data to httpsqs.\r\n\r\n*connect_timeout*\r\nThe connect timeout value.\r\n\r\n*sync_interval*\r\nThe sync interval of metadata file, default is 2s.\r\n\r\n*buffer_path(required)*\r\nThe disk buffer path for output plugin, default is /tmp/test.\r\n\r\n*buffer_queue_limit*\r\nThe queue limit of disk buffer, default is 64M.\r\n\r\n*buffer_chunk_limit*\r\nThe chunk limit of disk buffer to forward, default is 8M.\r\n\r\nStdout Output Plugin\r\n--------------------\r\nThe out_stdout output plugin allows gofluent to print events to stdout.\r\n\r\nExample Configuration\r\n\r\nout_stdout is included in gofluent’s core. No additional installation process is required.\r\n```\r\n<match stdout.**>\r\n  type stdout\r\n</match>\r\n```\r\n*type (required)*\r\nThe value must be stdout.\r\n\r\nMongodb Output Plugin\r\n---------------------\r\nThe out_mongodb output plugin allows gofluent to send message to mongodb.\r\n\r\nExample Configuration\r\n\r\nout_mongodb is included in gofluent's core. No additional installation process is required.\r\n```\r\n<match mongodb.**>\r\n  type mongodb\r\n  host localhost\r\n  port 27017\r\n  capped on\r\n  capped_size 1024\r\n  database test\r\n  collection test\r\n  user test\r\n  password test\r\n</match>\r\n```\r\n*type(required)* \r\nThe value must be mongodb.\r\n\r\n*host (required)*\r\nThe output target host ip.\r\n\r\n*port (required)*\r\nThe output target host port.\r\n\r\n*capped (highly recommended)*\r\nTo create a capped collection.\r\n\r\n*capped_size*\r\nSpecify the actual size(MB) of the capped collection.\r\n\r\n*database(required)*\r\nThe name of the database to be created or used.\r\n\r\n*collection(required)*\r\nThe name of the collection to be created or used.\r\n\r\n*user(highly recommended)*\r\nThe user name to login the database.\r\n\r\n*password(highly recommended)*\r\nThe password to login the database.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}